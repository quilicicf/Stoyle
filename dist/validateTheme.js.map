{"version":3,"sources":["/home/cquilici/work/forge/github/quilicicf/Stoyle/mod.ts","/home/cquilici/work/forge/github/quilicicf/Stoyle/validateTheme.ts"],"sourcesContent":["type Maybe<T> = T | undefined;\n\n/**************\n * ANSI CODES *\n *************/\n\nexport const RESET_CODE: number = 0;\n\n// noinspection JSUnusedGlobalSymbols\nexport enum ForegroundSimpleCode {\n  FG_Black = 30,\n  FG_Red = 31,\n  FG_Green = 32,\n  FG_Yellow = 33,\n  FG_Blue = 34,\n  FG_Magenta = 35,\n  FG_Cyan = 36,\n  FG_White = 37,\n  FG_Bright_Black = 90,\n  FG_Bright_Red = 91,\n  FG_Bright_Green = 92,\n  FG_Bright_Yellow = 93,\n  FG_Bright_Blue = 94,\n  FG_Bright_Magenta = 95,\n  FG_Bright_Cyan = 96,\n  FG_Bright_White = 97,\n}\n\n// noinspection JSUnusedGlobalSymbols\nexport enum BackgroundSimpleCode {\n  BG_Black = 40,\n  BG_Red = 41,\n  BG_Green = 42,\n  BG_Yellow = 43,\n  BG_Blue = 44,\n  BG_Magenta = 45,\n  BG_Cyan = 46,\n  BG_White = 47,\n  BG_Bright_Black = 100,\n  BG_Bright_Red = 101,\n  BG_Bright_Green = 102,\n  BG_Bright_Yellow = 103,\n  BG_Bright_Blue = 104,\n  BG_Bright_Magenta = 105,\n  BG_Bright_Cyan = 106,\n  BG_Bright_White = 107,\n}\n\n// noinspection JSUnusedGlobalSymbols\nexport enum DecorationCode {\n  Bold = 1,\n  Dim = 2,\n  Italic = 3,\n  Underline = 4,\n  Blink_Slow = 5,\n  Blink_Fast = 6,\n  Reverse_Video = 7,\n  Conceal = 8,\n  Crossed_Out = 9,\n  Primary = 10,\n  Alternative_Font_1 = 11,\n  Alternative_Font_2 = 12,\n  Alternative_Font_3 = 13,\n  Alternative_Font_4 = 14,\n  Alternative_Font_5 = 15,\n  Alternative_Font_6 = 16,\n  Alternative_Font_7 = 17,\n  Alternative_Font_8 = 18,\n  Alternative_Font_9 = 19,\n  Fraktur = 20,\n  Double_Underline = 21,\n  Normal = 22,\n  Italic_And_Fraktur_Off = 23,\n  Underline_Off = 24,\n  Blink_Off = 25,\n  Proportional_Spacing = 26,\n  Reverse_And_Invert_Off = 27,\n  Reveal_And_Conceal_Off = 28,\n  Crossed_Off = 29\n}\n\nfunction checkRgbRange (code: number) {\n  if (code < 0 || code > 255) {\n    throw Error(`RGB codes should be between 0 & 255, got: ${code}`);\n  }\n  return code;\n}\n\nexport class RgbCode {\n  red: number;\n  green: number;\n  blue: number;\n\n  constructor (red: number, green: number, blue: number) {\n    this.red = checkRgbRange(red);\n    this.green = checkRgbRange(green);\n    this.blue = checkRgbRange(blue);\n  }\n}\n\nexport class ForegroundRgbCode extends RgbCode {\n  toString () {\n    return `38;2;${this.red};${this.green};${this.blue}`;\n  }\n}\n\nexport class BackgroundRgbCode extends RgbCode {\n  toString () {\n    return `48;2;${this.red};${this.green};${this.blue}`;\n  }\n}\n\nexport type ForegroundCode = ForegroundSimpleCode | ForegroundRgbCode;\nexport type BackgroundCode = BackgroundSimpleCode | BackgroundRgbCode;\n\nexport interface Style {\n  color?: ForegroundCode,\n  backgroundColor?: BackgroundCode,\n  decoration?: DecorationCode,\n}\n\nexport function styleToAnsiCode ({ color, backgroundColor, decoration }: Style, shouldResetFirst: boolean = false): string {\n  const codes = [\n    ...(shouldResetFirst ? [ RESET_CODE ] : []),\n    color,\n    backgroundColor,\n    decoration,\n  ].filter((code) => (typeof code === 'number' || typeof code === 'object'));\n  return codes.length === 0 ? '' : `\\x1b[${codes.join(';')}m`;\n}\n\n/*******************\n * APPLYING STYLES *\n ******************/\n\nexport enum StyleMode { STYLE, NO_STYLE}\n\ninterface StylesToApply {\n  global?: Style,\n  edges?: Maybe<Style>[],\n  nodes?: Maybe<Style>[],\n}\n\ntype GlobalStyler = (style: Style, styleMode?: StyleMode) => string;\n\ntype Styler = (stylesToApply: StylesToApply, styleMode?: StyleMode) => string;\n\ninterface Fragment {\n  string: string,\n  shouldResetFirst: boolean,\n  style: Maybe<Style>,\n}\n\ninterface Accumulator {\n  currentStyle: Style,\n  fragments: Fragment[],\n}\n\nfunction areStylesEqual (style1: Style, style2: Style): boolean {\n  return style1.color === style2.color\n    && style1.backgroundColor === style2.backgroundColor\n    && style1.decoration === style2.decoration;\n}\n\nfunction computeNextFragment (string: string, lastStyle: Style, styleToApply: Maybe<Style>): Fragment {\n  if (!styleToApply || areStylesEqual(styleToApply, lastStyle)) { return { string, shouldResetFirst: false, style: undefined }; }\n\n  const shouldRemoveOldColor = !!lastStyle.color && !styleToApply.color;\n  const shouldRemoveOldBackgroundColor = !!lastStyle.backgroundColor && !styleToApply.backgroundColor;\n  const shouldRemoveOldDecoration = !!lastStyle.decoration && styleToApply.decoration !== lastStyle.decoration;\n  const shouldResetFirst = shouldRemoveOldColor || shouldRemoveOldBackgroundColor || shouldRemoveOldDecoration;\n\n  return { // Colors are reset if unset\n    string,\n    shouldResetFirst,\n    style: {\n      color: shouldResetFirst || styleToApply.color !== lastStyle.color ? styleToApply.color : undefined,\n      backgroundColor: shouldResetFirst || styleToApply.backgroundColor !== lastStyle.backgroundColor ? styleToApply.backgroundColor : undefined,\n      decoration: shouldResetFirst || styleToApply.decoration !== lastStyle.decoration ? styleToApply.decoration : undefined,\n    },\n  };\n}\n\nfunction computeNextCode<T> (lastCode: Maybe<T>, newCode: Maybe<T>, hasReset: boolean): Maybe<T> {\n  if (newCode) { return newCode; }\n  return hasReset || !lastCode ? undefined : lastCode;\n}\n\nfunction printFragmentStyle (fragment: Fragment) {\n  return fragment.style ? styleToAnsiCode(fragment.style, fragment.shouldResetFirst) : '';\n}\n\nfunction getString (index: number, edges: string[], nodes: any[]): string {\n  const isEven = index % 2 === 0;\n  const halfIndex = ~~(index / 2);\n  return String(\n    isEven ? edges[ halfIndex ] : nodes[ halfIndex ],\n  );\n}\n\nfunction getSpecificStyle (index: number, styles: StylesToApply): Maybe<Style> {\n  const isEven = index % 2 === 0;\n  const halfIndex = ~~(index / 2);\n  return isEven ? styles?.edges?.[ halfIndex ] : styles?.nodes?.[ halfIndex ];\n}\n\nexport function stoyleString (input: string, style: Style, styleMode: StyleMode = StyleMode.STYLE): string {\n  return styleMode === StyleMode.NO_STYLE\n    ? input\n    : styleToAnsiCode(style) + input + styleToAnsiCode({}, true);\n}\n\nexport function stoyleGlobal (edgesAsTemplateStringArray: TemplateStringsArray, ...nodes: any[]): GlobalStyler {\n  const edges = [ ...edgesAsTemplateStringArray ];\n  return (style: Style, styleMode: StyleMode = StyleMode.STYLE) => {\n    const wholeString = new Array(edges.length + nodes.length)\n      .fill(null)\n      .map((whatever, index) => getString(index, edges, nodes))\n      .join('');\n    return stoyleString(wholeString, style, styleMode);\n  };\n}\n\nexport function stoyle (edgesAsTemplateStringArray: TemplateStringsArray, ...nodes: any[]): Styler {\n  const edges = [ ...edgesAsTemplateStringArray ];\n  return (styles: StylesToApply, styleMode: StyleMode = StyleMode.STYLE) => {\n    if (styles.edges && edges.length !== styles.edges?.length) {\n      throw Error(`I found ${edges.length} edge(s), but ${styles.edges?.length} edge style(s)!`);\n    }\n\n    if (styles.nodes && nodes.length !== styles.nodes?.length) {\n      throw Error(`I found ${nodes.length} node(s), but ${styles.nodes?.length} node style(s)!`);\n    }\n\n    const globalStyle = styles?.global ?? {}; // Defaults to no style\n    const accumulator: Accumulator = new Array(edges.length + nodes.length)\n      .fill(null)\n      .reduce(\n        (seed: Accumulator, whatever, index) => {\n          const string = getString(index, edges, nodes);\n\n          if (!string) { return seed; } // Nothing to write for empty strings\n\n          const specificStyle = getSpecificStyle(index, styles);\n          const styleToApply = specificStyle ?? globalStyle; // Specific styles supersede global style\n          const fragment: Fragment = styleMode === StyleMode.NO_STYLE\n            ? { string, shouldResetFirst: false, style: {} }\n            : computeNextFragment(string, seed.currentStyle, styleToApply);\n\n          seed.fragments.push(fragment);\n          seed.currentStyle = {\n            color: computeNextCode(seed.currentStyle.color, fragment?.style?.color, fragment.shouldResetFirst),\n            backgroundColor: computeNextCode(seed.currentStyle.backgroundColor, fragment?.style?.backgroundColor, fragment.shouldResetFirst),\n            decoration: computeNextCode(seed.currentStyle.decoration, fragment?.style?.decoration, fragment.shouldResetFirst),\n          };\n          return seed;\n        },\n        {\n          currentStyle: {},\n          fragments: [],\n        } as Accumulator,\n      );\n\n    const { fragments, currentStyle: lastStyle } = accumulator;\n\n    const shouldCleanup = !!lastStyle.color\n      || !!lastStyle.backgroundColor\n      || !!lastStyle.decoration;\n\n    const allFragments = shouldCleanup\n      ? fragments.concat({ string: '', shouldResetFirst: true, style: {} })\n      : fragments;\n\n    return allFragments\n      .map((fragment: Fragment) => printFragmentStyle(fragment) + fragment.string)\n      .join('');\n  };\n}\n","// @ts-ignore: Ignore TS2691\nimport { BackgroundSimpleCode, ForegroundSimpleCode, DecorationCode } from './mod.ts';\n\nfunction checkCodeProperty (code: Record<string, any>, propertyName: string): boolean {\n  return !!code[ propertyName ] && typeof code[ propertyName ] === 'number';\n}\n\nfunction checkValidCodeOrRgb (color: any, enumValues: any[]): boolean {\n  return checkValidCode(color, enumValues)\n    || (color.red && color.green && color.blue);\n}\n\nfunction checkValidCode (color: any, enumValues: any[]): boolean {\n  return enumValues.includes(color);\n}\n\nfunction recursiveValidateTheme (referenceTheme: Record<string, any>, theme: Record<string, any>, location: string[], errors: string[]): string[] {\n  Object.entries(referenceTheme)\n    .forEach(([ key, referenceCode ]) => {\n      if (!referenceCode) { return; }\n      if (typeof referenceCode !== 'object') { return; }\n\n      const themeCode = theme[ key ];\n      const childLocation = [ ...location, key ];\n      if (!checkCodeProperty(referenceCode, 'color')\n        && !checkCodeProperty(referenceCode, 'backgroundColor')\n        && !checkCodeProperty(referenceCode, 'decoration')) {\n        if (!themeCode || typeof themeCode !== 'object') {\n          errors.push(`The theme should contain an object at ${JSON.stringify(childLocation)}`);\n          return;\n        }\n\n        recursiveValidateTheme(referenceCode, themeCode, childLocation, errors);\n        return;\n      }\n\n      if (!themeCode || typeof themeCode !== 'object') {\n        errors.push(`The theme should contain a style at ${JSON.stringify(childLocation)}`);\n        return;\n      }\n\n      const themeColor = themeCode.color;\n      if (themeColor && !checkValidCodeOrRgb(themeColor, Object.values(ForegroundSimpleCode))) {\n        errors.push(`The theme color is invalid at ${JSON.stringify(childLocation)}. It should be a ForegroundSimpleCode or ForegroundRgbCode`);\n      }\n\n      const themeBackgroundColor = themeCode.backgroundColor;\n      if (themeBackgroundColor && !checkValidCodeOrRgb(themeBackgroundColor, Object.values(BackgroundSimpleCode))) {\n        errors.push(`The theme backgroundColor is invalid at ${JSON.stringify(childLocation)}. It should be a BackgroundSimpleCode or BackgroundRgbCode`);\n      }\n\n      const themeDecoration = themeCode.decoration;\n      if (themeDecoration && !checkValidCode(themeDecoration, Object.values(DecorationCode))) {\n        errors.push(`The theme decoration is invalid at ${JSON.stringify(childLocation)}. It should be a DecorationCode`);\n      }\n    });\n\n  return errors;\n}\n\nexport function validateTheme (referenceTheme: Record<string, any>, theme: Record<string, any>): Record<string, any> {\n  const errors = recursiveValidateTheme(referenceTheme, theme, [], []);\n\n  if (errors.length) {\n    throw new Error(`[Theme errors]\\n* ${errors.join('\\n* ')}`);\n  }\n\n  return theme;\n}\n"],"names":[],"mappings":"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"}